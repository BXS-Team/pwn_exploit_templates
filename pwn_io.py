#!/usr/bin/env python
from pwn import *
import time
class pwn_io():
    def __init__(self,binary,isremote,isdebug,ip,port):
        self.isremote=isremote
        self.isdebug=isdebug
        self.ip=ip
        self.port=port
        self.binary=binary
        self.io=None
        self.run()
    def run(self):
	    if self.isremote:
		    if self.isdebug:
			    context.log_level='debug'
		    else:
			    context.log_level='info'
		    while True:
			    try:
				    self.io=remote(self.ip,self.port)
			    except:
				    log.info("remote:too many requests,I am tried,sleep one second please")
				    sleep(0x10)
				    continue
			    break
	    else:
		    while True:
			    try:
				    self.io=process(self.binary)
			    except:
				    log.info("local:too many process,I can not malloc any memory")
				    log.info("bye~~")
				    exit()
			    break
		    if self.isdebug:
			    gdb.attach(self.io)
    def s(self,data):
        self.io.send(str(data)) 
    def sa(self,delim,data):
        self.io.sendafter(str(delim), str(data))
    def sl(self,data):
        self.io.sendline(str(data))
    def sla(self,delim,data):
        self.io.sendlineafter(str(delim), str(data))
    def r(self,numb=4096):
        self.io.recv(numb)
    def ru(self,delims,drop=True):
        self.io.recvuntil(delims, drop)
    def irt(self):
        self.io.interactive()
    def close(self):
        self.io.close()
def uu32(data):
    u32(data.ljust(4, '\0'))
def uu64(data):
    u64(data.ljust(8, '\0'))